import { Card, Navbar, Stack } from "react-bootstrap";
import Head from "next/head";
import useSWR from "swr";
import SearchBar from "./components/searchBar";
import MyPagination from "./components/pagination";
import { useState } from "react";
import SortMenu from "./components/sortMenu";
import { useRouter } from "next/router";

export default function Home() {
  const defaultUrl = "http://localhost/api/products";
  const router = useRouter();
  const query = router.query;
  const [url, setUrl] = useState(defaultUrl);

  const handlePaginateFetch = (url) => {
    setUrl(
      url +
        `&orderBy=${query.orderBy}&direction=${query.direction}&paginate=${query.paginate}`
    );
  };

  const handleSort = () => {
    console.log(
      "asd",
      defaultUrl +
        `?orderBy=${query.orderBy}&direction=${query.direction}&paginate=${query.paginate}`
    );
    setUrl(
      defaultUrl +
        `?orderBy=${query.orderBy}&direction=${query.direction}&paginate=${query.paginate}`
    );
  };

  const fetcher = (...args) => fetch(...args).then((res) => res.json());
  const { data, error } = useSWR(url, fetcher);

  if (error) {
    console.log(error);
    return <div>error</div>;
  }
  if (!data) {
    console.log(data);
    return <div>Loading...</div>;
  }

  console.log(data);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar bg="white" fixed="top">
        <SearchBar />
        <SortMenu handleSort={handleSort} />
      </Navbar>

      <Stack gap={3} className="mt-5">
        {data.data.map((product) => (
          <Card key={product.id} style={{ width: "50em" }}>
            <Stack direction="horizontal">
              <Card.Img
                variant="top"
                src={product.image}
                style={{ width: "200px" }}
              />
              <Card.Body>
                <Card.Title>{product.name}</Card.Title>
                <Card.Subtitle>${product.price}</Card.Subtitle>
                <Card.Text>{product.description}</Card.Text>
                <Card.Text>Quantity: {product.quantity}</Card.Text>
              </Card.Body>
            </Stack>
          </Card>
        ))}
      </Stack>

      <MyPagination data={data} handlePaginateFetch={handlePaginateFetch} />
    </div>
  );
}
